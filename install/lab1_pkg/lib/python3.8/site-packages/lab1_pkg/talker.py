import rclpy
from rclpy.node import Node
from ackermann_msgs.msg import AckermannDriveStamped # AckermannDrive

class Talker(Node):
    def __init__(self):
        self.declare_parameter('v')
        self.declare_parameter('d')
        super().__init__('talker')
        self.publisher_ = self.create_publisher(AckermannDriveStamped, 'drive', 10)        
        timer_period = 0.5  # seconds
        self.timer = self.create_timer(timer_period, self.timer_callback)
        self.i = 0
    def timer_callback(self):
        msg.drive.speed = self.get_parameter('v')
        msg.drive.steering_angle = self.get_parameter('d')
        msg = AckermannDriveStamped()
        #msg.data = 'Hello World: %d' % self.i
        self.publisher_.publish(msg)
        self.get_logger().info('Publishing: "%s"' % msg.drive.speed)
        self.i += 1
def main(args=None):
        rclpy.init(args=args)
        talker = Talker()
        rclpy.spin(talker)
    	# Destroy the node explicitly
    	# (optional - otherwise it will be done automatically
    	# when the garbage collector destroys the node object)
        talker.destroy_node()
        rclpy.shutdown()
if __name__ == '__main__':
	main()
